# nginx.conf

user www-data;
worker_processes 2;
pid /var/run/nginx.pid;
daemon off;
events {
    worker_connections 1024;
    # multi_accept on;
}

http {

    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    # server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    default_type application/octet-stream;

    ##
    # Logging Settings
    ##

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_disable "msie6";

    ##
    # Virtual Host Configs
    ##

    #server {
    #    server_name _;
    #    return 444;
    #}

    # myapp.conf



    lingering_timeout 1s;
    client_header_timeout 5s;
    reset_timedout_connection on;
    send_timeout 15s;

    push_stream_shared_memory_size                100m;
    push_stream_max_channel_id_length             200;
    # max messages to store in memory
    push_stream_max_messages_stored_per_channel   1;
    # message ttl
    push_stream_message_ttl                       5m;
    # ping frequency
    push_stream_ping_message_interval             10s;
    # connection ttl to enable recycle
    # push_stream_subscriber_connection_ttl         90s;
    # connection ttl for long polling
    push_stream_longpolling_connection_ttl        30s;

    # wildcard
    push_stream_wildcard_channel_prefix         "broad_";
    push_stream_wildcard_channel_max_qtd        3;

    # push_stream_message_template                "{\"id\":~id~,\"channel\":\"~channel~\",\"text\":~text~, \"tag\":\"~tag~\", \"time\":\"~time~\", \"eventid\":\"~event-id~\"}";

    # subscriber may create channels on demand or only authorized (publisher) may do it?
    push_stream_authorized_channels_only        off;

    push_stream_allowed_origins                 "*";

    upstream wondrous_api {
        server 127.0.0.1:5000;
        server 127.0.0.1:5001;
    }

    server {
      listen 80;
      server_name wondrous.co;
      server_tokens off;
      return 301 https://$host$request_uri ?;
    }

    server {

        # optional ssl configuration

        listen 443 ssl;
        ssl_certificate /home/ubuntu/ssltmp/ssl-bundle.crt;
        ssl_certificate_key /home/ubuntu/ssltmp/wondrous_private_key.pem;

        # end of optional ssl configuration

        server_name  wondrous.co;

        access_log  /home/wondrous/env/access.log;

        lingering_time 5s;


        location /channels-stats {
            # activate channels statistics mode for this location
            push_stream_channels_statistics;

            # query string based channel id
            push_stream_channels_path               $arg_id;
        }

        location /pub {
            #internal;
	        allow 127.0.0.1;
            deny all;
                        # activate publisher mode for this location, with admin support
            push_stream_publisher admin;

            # query string based channel id
            push_stream_channels_path               $arg_id;

            # store messages in memory
            # push_stream_store_messages              on;

            # Message size limit
            # client_max_body_size MUST be equal to client_body_buffer_size or
            # you will be sorry.
            client_max_body_size                    4k;
            client_body_buffer_size                 4k;
		    error_log /usr/local/nginx/logs/updates_listen.log;
        }

        location /ws {
            #allow 127.0.0.1;
            #deny all;
            internal;
            # activate websocket mode for this location
            push_stream_subscriber websocket;

            # positional channel path
            push_stream_channels_path                   $arg_channels;
            # message template
            push_stream_message_template                 "{\"id\":~id~,\"channel\":\"~channel~\",\"text\":~text~}";

            push_stream_websocket_allow_publish         on;

            # ping frequency
            push_stream_ping_message_interval           10s;
            error_log /usr/local/nginx/logs/ws_listen.log;
        }

        location ~ /subscribe {
            #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            #proxy_set_header Host $http_host;
            #proxy_redirect off;
            proxy_pass "http://localhost:8888";
        }

        location /{
            root /home/ubuntu/wondrous_static;
            sendfile                off;
            expires                 3600s;
            add_header              Cache-Control public;
            access_log              off;
            try_files $uri /index.html;
        }

        location ~ ^/api/ {
            proxy_set_header        Host $http_host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;

            client_max_body_size    10m;
            client_body_buffer_size 128k;
            proxy_connect_timeout   60s;
            proxy_send_timeout      90s;
            proxy_read_timeout      90s;
            proxy_buffering         off;
            proxy_temp_file_write_size 64k;
            proxy_pass http://wondrous_api;
            proxy_redirect          off;
        }
    }

}
